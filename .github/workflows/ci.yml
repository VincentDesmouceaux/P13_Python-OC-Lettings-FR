# .github/workflows/ci.yml
name: CI – lint, tests, build & deploy

on:
  push:
    branches: ['**']          # toutes les branches
  pull_request: {}
  workflow_dispatch: {}

##############################################################################
# Variables publiques (tout le reste → Secrets GitHub)
##############################################################################
env:
  PY_VER: ${{ secrets.PY_VER }}     # ex : 3.12

jobs:
  ###########################################################################
  # 1 · TESTS
  ###########################################################################
  test:
    runs-on: ubuntu-latest
    env:
      PY_VER: ${{ secrets.PY_VER }}
      DJANGO_SECRET_KEY: ci-dummy-secret      # clé factice pour les tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install deps, lint & test
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest-cov
          flake8 .
          pytest --cov=. \
                 --cov-report=xml \
                 --cov-report=term-missing \
                 --cov-fail-under=80

  ###########################################################################
  # 2 · BUILD & PUSH (uniquement sur master / main)
  ###########################################################################
  docker:
    needs: test
    if: >
      needs.test.result == 'success' &&
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}   # vincentdesmouceaux/oc-lettings-site
      IMAGE_TAG:  ${{ secrets.IMAGE_TAG }}      # latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push (amd64 + arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_REPO }}:${{ github.sha }}
          build-args: |
            GIT_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          provenance: false        # manifest plus léger

  ###########################################################################
  # 3 · DEPLOY NORTHFLANK  (service « Combined » → endpoint /build)
  ###########################################################################
  deploy:
    needs: docker
    if: needs.docker.result == 'success'
    runs-on: ubuntu-latest
    env:
      NF_TOKEN:   ${{ secrets.NORTHFLANK_TOKEN }}   # nf_pat_xxx…
      NF_TEAM:    ${{ secrets.NF_TEAM }}            # ex : desmontvincent
      NF_PROJECT: ${{ secrets.NF_PROJECT }}         # ex : vintedbackendtestone
      NF_SERVICE: ${{ secrets.NF_SERVICE }}         # ex : holiday-homes
    steps:
      - name: Trigger Northflank build (non-bloquant)
        continue-on-error: true         # retirez quand tout sera OK
        run: |
          set -euo pipefail
          API="https://api.northflank.com/v1/teams/${NF_TEAM}/projects/${NF_PROJECT}/services/${NF_SERVICE}/build"

          echo "▶️  POST $API"
          curl -sS -w '\nHTTP_CODE:%{http_code}\n' -X POST "$API" \
               -H "X-NF-API-KEY: ${NF_TOKEN}" \
               -H "Content-Type: application/json" \
               -d '{"reason":"GitHub Action auto-deploy"}' || true
