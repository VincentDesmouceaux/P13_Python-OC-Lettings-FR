# .github/workflows/ci.yml
name: CI â€“ lint, tests, build & deploy

###############################################################################
# DÃ©clencheurs
###############################################################################
on:
  push:
    branches: ['**']   # toutes les branches
  pull_request:
  workflow_dispatch:

###############################################################################
# Variables globales
###############################################################################
env:
  PY_VER: '3.12'

  # Docker Hub
  DOCKER_REPO: vincentdesmouceaux/oc-lettings-site
  IMAGE_TAG:  latest          # + tag SHA auto-gÃ©nÃ©rÃ©

  # Northflank (slugs EXACTS)
  NF_PROJECT: vintedbackendtestone
  NF_SERVICE: holiday-homes

###############################################################################
jobs:
###############################################################################

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 1 Â· TESTS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install, lint & test
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest-cov
          flake8 .
          pytest --cov=. \
                 --cov-report=xml \
                 --cov-report=term-missing \
                 --cov-fail-under=80

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 2 Â· BUILD & PUSH (master/main) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  docker:
    needs: test
    if: >
      needs.test.result == 'success' &&
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push (amd64 + arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_REPO }}:${{ github.sha }}
          build-args: |
            GIT_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          provenance: false

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 3 Â· DÃ‰PLOIEMENT NORTHFLANK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  deploy:
    needs: docker
    if: needs.docker.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Redeploy service on Northflank
        env:
          NF_API_TOKEN: ${{ secrets.NORTHFLANK_TOKEN }}
          NF_PROJECT:   ${{ env.NF_PROJECT }}
          NF_SERVICE:   ${{ env.NF_SERVICE }}
        run: |
          set -euo pipefail
          echo "ðŸ’¡ Redeploy ${NF_PROJECT}/${NF_SERVICE}"
          curl -sSf -X POST \
            "https://api.northflank.com/v1/projects/bySlug/${NF_PROJECT}/services/bySlug/${NF_SERVICE}/deployment" \
            -H "Authorization: Bearer ${NF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{ "reason": "GitHub Action auto-deploy" }'
