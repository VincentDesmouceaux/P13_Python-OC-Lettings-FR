name: CI – tests & lint

on:
  # ➜ déclenche-ment à CHAQUE push sur n’importe quelle branche
  push:
    branches: ["*"]

  # ➜ déclenche-ment sur les PR aussi (utile pour les forks)
  pull_request:

  # ➜ exécution manuelle depuis l’onglet Actions
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    # Variable d'environnement pour Sentry disponible dans **toutes** les étapes
    env:
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      # 1) Récupération du code
      - name: Checkout sources
        uses: actions/checkout@v4

      # 2) Environnement Python
      - name: Set-up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # 3) Cache pip
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4) Installation des dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest-cov

      # 5) Linting
      - name: Run flake8
        run: flake8 .

      # 6) Tests + couverture (>80 % obligatoire)
      - name: Run pytest with coverage
        run: pytest --cov=. --cov-report=xml --cov-fail-under=80
