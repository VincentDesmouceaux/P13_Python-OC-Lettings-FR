# .github/workflows/ci.yml
name: CI – lint, tests, build & deploy

###############################################################################
# Déclencheurs
###############################################################################
on:
  push:
    branches: ["**"]          # toutes les branches
  pull_request:
  workflow_dispatch:

###############################################################################
# Variables globales
###############################################################################
env:
  PY_VER: "3.12"
  DOCKER_REPO: vincentdesmouceaux/oc-lettings-site           # chemin sur Docker Hub (sans docker.io/)
  NF_PROJECT: vintedbackendtestone                            # slug Northflank (Settings ▸ General)
  NF_SERVICE: holiday-homes                                   # slug Northflank (Settings ▸ General)
  IMAGE_TAG: latest                                           # tag déployé

###############################################################################
jobs:
###############################################################################

# ───────────────────────────── 1. TESTS ────────────────────────────────────
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps, lint & tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest-cov
          flake8 .
          pytest --cov=. \
                 --cov-report=xml \
                 --cov-report=term-missing \
                 --cov-fail-under=80

# ────────────────────── 2. BUILD & PUSH (master/main) ──────────────────────
  docker:
    needs: test
    if: >
      needs.test.result == 'success' &&
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      # multi-arch : QEMU + Buildx
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # login Docker Hub
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push (amd64 + arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_REPO }}:${{ github.sha }}
          build-args: GIT_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false               # manifest plus léger

# ───────────────────────── 3. DEPLOY NORTHFLANK ────────────────────────────
  deploy:
    needs: docker
    if: needs.docker.result == 'success'
    runs-on: ubuntu-latest

    steps:
      # ─── Vérifier les variables (log) ───
      - name: Debug – variables d'environnement
        run: |
          echo "NF_PROJECT=$NF_PROJECT"
          echo "NF_SERVICE=$NF_SERVICE"
          echo "IMAGE_PATH=docker.io/$DOCKER_REPO:$IMAGE_TAG"

      # ─── Test API Northflank (verbeux, ne fait pas échouer le job) ───
      - name: Debug – appel API Northflank
        env:
          NF_API_TOKEN: ${{ secrets.NORTHFLANK_TOKEN }}
        continue-on-error: true
        run: |
          set -euxo pipefail
          curl -v -w '\nHTTP_CODE:%{http_code}\n' \
            -H "Authorization: Bearer ${NF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{ "external": { "imagePath": "docker.io/'"${DOCKER_REPO}:${IMAGE_TAG}"'" } }' \
            https://api.northflank.com/v1/projects/${NF_PROJECT}/services/${NF_SERVICE}/deployment || true

      # ─── Déploiement via l'Action officielle Northflank ───
      - name: Deploy image to Northflank
        uses: northflank/deploy-to-northflank@v1  # v1.0.0 (dernier tag)
        with:
          northflank-api-key: ${{ secrets.NORTHFLANK_TOKEN }}
          project-id:         ${{ env.NF_PROJECT }}
          service-id:         ${{ env.NF_SERVICE }}
          image-path:         docker.io/${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
          # credentials-id:   DockerHubCreds   # décommente si image privée
