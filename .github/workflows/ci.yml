# .github/workflows/ci.yml
name: CI – tests, lint, build & push

###############################################################################
# Déclencheurs
###############################################################################
on: [push, pull_request, workflow_dispatch]

###############################################################################
# Variables globales – NE JAMAIS stocker de secret en clair
###############################################################################
env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site

###############################################################################
# 1) Lint + tests Python
###############################################################################
jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: install / lint / tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest-cov
          flake8 .
          pytest --cov=. --cov-report=xml --cov-fail-under=80

###############################################################################
# 2) Build, smoke-test, push (multi-arch)
###############################################################################
  docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write            # ↑ autorise le push vers Docker Hub

    steps:
      - uses: actions/checkout@v4

      # 1️⃣ QEMU – émulation ARM pour le build multi-arch
      - uses: docker/setup-qemu-action@v3

      # 2️⃣ Buildx (driver docker-container) – indispensable pour linux/arm64
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          buildkitd-flags: --debug

      #######################################################################
      # 3️⃣ Build local + smoke-test (AMD64 uniquement, rapide)
      #######################################################################
      - name: build-image (local)
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true            # charge l’image dans le daemon local
          tags: smoke:test       # tag temporaire SANS commentaire
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: smoke-test container
        run: |
          docker run -d --name smoke -e DJANGO_DEBUG=false -p 8000:8000 smoke:test
          # on laisse Gunicorn démarrer
          sleep 15
          curl -sf http://localhost:8000/ | grep -qi "Holiday Homes"
          docker rm -f smoke

      #######################################################################
      # 4️⃣ Login Docker Hub + build multi-arch + push
      #######################################################################
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build-and-push (multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64   # image universelle
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
