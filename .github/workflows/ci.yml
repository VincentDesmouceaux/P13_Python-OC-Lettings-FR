# CI – lint, tests, build (multi-arch) & deploy Northflank
name: CI – lint, tests, build & deploy

on:
  push:
    branches: ["**"]        # toutes les branches
  pull_request:
  workflow_dispatch:

env:
  PY_VER: "3.12"                    # version Python pour les tests
  REGISTRY: docker.io
  NF_PROJECT: vintedbackendtestone  # Northflank project slug
  NF_SERVICE: holiday-homes         # Northflank service slug

jobs:
###############################################################################

# ────────────────────────────── 1. TESTS ────────────────────────────────────
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps, lint & tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest-cov
          flake8 .
          pytest --cov=. \
                 --cov-report=xml \
                 --cov-report=term-missing \
                 --cov-fail-under=80

# ───────────────────── 2. BUILD & PUSH IMAGE (master/main) ─────────────────
  docker:
    needs: test
    if: >
      needs.test.result == 'success' &&
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write          # push Docker Hub

    steps:
      - uses: actions/checkout@v4

      # 2.1 QEMU + Buildx multi-arch
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # 2.2 login Docker Hub
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 2.3 nom complet de l’image (hors masking)
      - name: Compose full image name
        id: img
        run: echo "IMAGE_FULL=${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site" >> "$GITHUB_OUTPUT"

      # 2.4 build multi-arch & push
      - name: Build & push (linux/amd64 + linux/arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.img.outputs.IMAGE_FULL }}:latest
            ${{ steps.img.outputs.IMAGE_FULL }}:${{ github.sha }}
          build-args: |
            GIT_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          provenance: false          # manifest plus léger

# ───────────────────────── 3. DEPLOY NORTHFLANK ────────────────────────────
  deploy:
    needs: docker
    if: needs.docker.result == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger redeploy on Northflank
        env:
          NF_API_TOKEN: ${{ secrets.NORTHFLANK_TOKEN }}
          DOCKER_REPO:  ${{ steps.img.outputs.IMAGE_FULL }}
          IMAGE_TAG:    latest
          NF_PROJECT:   ${{ env.NF_PROJECT }}
          NF_SERVICE:   ${{ env.NF_SERVICE }}
        run: |
          curl -sSL -X POST \
            "https://api.northflank.com/v1/projects/by-slug/${NF_PROJECT}/services/by-slug/${NF_SERVICE}/deploy" \
            -H "Authorization: Bearer ${NF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{
              "image": { "repository": "'"${DOCKER_REPO}"'", "tag": "'"${IMAGE_TAG}"'" },
              "reason": "GitHub Action auto-deploy"
            }'
