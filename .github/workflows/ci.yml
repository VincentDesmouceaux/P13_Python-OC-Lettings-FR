# .github/workflows/ci.yml
name: CI – tests, build & (optionnel) deploy

###############################################################################
# Déclencheurs
###############################################################################
on:
  push:
    branches:
      - "**"               # toutes les branches
  pull_request:            # PR depuis n’importe quelle branche
  workflow_dispatch:       # déclenchement manuel

###############################################################################
# Variables globales (jamais de secrets en clair)
###############################################################################
env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site
  PY_VER: "3.12"

###############################################################################
# 1) Lint + tests – TOUJOURS exécuté
###############################################################################
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install + lint + tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest-cov
          flake8 .
          pytest --cov=. --cov-report=xml --cov-fail-under=80

###############################################################################
# 2) Build & push (multi-arch) – UNIQUEMENT sur master
###############################################################################
  docker:
    needs: test
    if: github.ref == 'refs/heads/master' && needs.test.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

###############################################################################
# 3) Déploiement (Northflank, Render, SSH…)
#    — exécutez vos scripts seulement si l'image a été poussée avec succès.
###############################################################################
  deploy:
    needs: docker
    if: needs.docker.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Déploiement (exemple placeholder)
        run: |
          echo "Ici vous appelez l'API Northflank, Render, Ansible, etc."
