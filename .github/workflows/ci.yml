name: CI – tests, build, deploy

on:
  push:
    branches: ['main', 'master']        # déclenche CI + build + deploy
  pull_request:                         # exécute seulement le job test
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site
  PY_VER: '3.12'

jobs:
  # ────────────────────────── test ──────────────────────────
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install, lint, test
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest-cov
          flake8 .
          pytest --cov=. --cov-report=xml --cov-fail-under=80

 
  # ------------------------ build & push image ----------------------
  docker:
    needs: test
    if: needs.test.result == 'success' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push (stage prod)
        uses: docker/build-push-action@v5
        with:
          context: .
          target: prod
          build-args: |
            GIT_SHA=${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ───────────────────────────── deploy ─────────────────────────────
  deploy:
    needs: docker
    if: needs.docker.result == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger redeploy on Northflank
        env:
          NF_API_TOKEN:  ${{ secrets.NORTHFLANK_TOKEN }}
          NF_PROJECT:    "vintedbackendtestone"
          NF_SERVICE:    "holiday-homes"
          IMAGE_TAG:     latest
          DOCKER_REPO:   ${{ env.IMAGE_NAME }}
        run: |
          set -euo pipefail
          curl -X POST \
            "https://api.northflank.com/v1/projects/by-slug/${NF_PROJECT}/services/by-slug/${NF_SERVICE}/deploy" \
            -H "Authorization: Bearer ${NF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{
              \"image\": {\"repository\": \"${DOCKER_REPO}\", \"tag\": \"${IMAGE_TAG}\"},
              \"reason\": \"GitHub Action auto-deploy\"
            }"
