# .github/workflows/ci.yml
name: CI â€“ lint, tests, build & deploy

on:
  push:            { branches: ['**'] }
  pull_request:    {}
  workflow_dispatch:

##############################################################################
# Variables globales Â« publiques Â» (tout le reste passe par les secrets)
##############################################################################
env:
  PY_VER: ${{ secrets.PY_VER }}

jobs:
##############################################################################
# 1 Â· TESTS
##############################################################################
  test:
    runs-on: ubuntu-latest
    env:
      PY_VER: ${{ secrets.PY_VER }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install deps, lint & test
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest-cov
          flake8 .
          pytest --cov=. \
                 --cov-report=xml \
                 --cov-report=term-missing \
                 --cov-fail-under=80

##############################################################################
# 2 Â· BUILD & PUSH (master/main uniquement)
##############################################################################
  docker:
    needs: test
    if: >
      needs.test.result == 'success' &&
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
      IMAGE_TAG:  ${{ secrets.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push (amd64 + arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_REPO }}:${{ github.sha }}
          build-args: GIT_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          provenance: false      # manifest + lÃ©ger

##############################################################################
# 3 Â· DEPLOY NORTHFLANK
##############################################################################
# .github/workflows/ci.yml (extrait corrigÃ©)
  deploy:
    needs: docker
    if: needs.docker.result == 'success'
    runs-on: ubuntu-latest
    env:
      NF_API_TOKEN: ${{ secrets.NORTHFLANK_TOKEN }}
      NF_PROJECT:   ${{ secrets.NF_PROJECT }}
      NF_SERVICE:   ${{ secrets.NF_SERVICE }}
    steps:
      - name: Trigger deployment
        run: |
          set -euo pipefail
          echo "ðŸ’¡ Redeploy ${NF_PROJECT}/${NF_SERVICE}"
          curl -sSf -X POST \
            "https://api.northflank.com/v1/projects/by-slug/${NF_PROJECT}/services/by-slug/${NF_SERVICE}/build" \
            -H "Authorization: Bearer ${NF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{ "reason": "GitHub Action auto-deploy" }'
    